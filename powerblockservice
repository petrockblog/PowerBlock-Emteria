#!/system/bin/sh

### BEGIN INIT INFO
# Exec: boot
# Type: permanent
### END INIT INFO

# Common path for all GPIO access
BASE_GPIO_PATH=/sys/class/gpio

# Assign names to GPIO pin numbers
STATUS_PIN=17
SHUTDOWN_PIN=18

# Assign names to states
STATE_ON="1"
STATE_OFF="0"

# Exports a pin if not already exported
# Parameter $1: pin number
exportPin() {
  if [ ! -e $BASE_GPIO_PATH/gpio$1 ]; then
    echo "$1" > $BASE_GPIO_PATH/export
  fi
}

# Set a pin as an output
# Parameter $1: pin number to be set as output pin
setDirectionOutput() {
  echo "out" > $BASE_GPIO_PATH/gpio$1/direction
}

# Set a pin as an output
# Parameter $1: pin number to be set as output pin
setDirectionInput() {
  echo "in" > $BASE_GPIO_PATH/gpio$1/direction
}

# Set value of a pin
# Parameter $1: pin number
# Parameter $2: output value. Can be 0 or 1
setPinValue() {
  echo $2 > $BASE_GPIO_PATH/gpio$1/value
}

# Returns the current pin value
# Parameter $1: pin number to be read from
getPinValue() {
  echo $(cat $BASE_GPIO_PATH/gpio$1/value)
}

doShutdown() {
  #shutdown -h now  # Rasbian/Linux call for shutting down the system
  reboot -p  # Android call for shutting down the system
}

exportPin $STATUS_PIN
exportPin $SHUTDOWN_PIN

setDirectionOutput $STATUS_PIN
setDirectionInput $SHUTDOWN_PIN

setPinValue $STATUS_PIN $STATE_ON


isShutdownRunning=0
doRun=1

stopRunning() {
  doRun=0
}

trap stopRunning SIGINT  # Ctrl-C handler for clean shutdown

while [ $doRun ]
do
  sleep 1
  currentValue=$(getPinValue $SHUTDOWN_PIN)
  if [ $currentValue -eq $STATE_ON ]; then
    if [ $isShutdownRunning -eq 0 ]; then
      echo "[PowerBlock] Shutdown signal detected."
      doShutdown
      isShutdownRunning=1
    fi
  fi
done
